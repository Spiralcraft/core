<task:Reference
  xmlns:task="class:/spiralcraft/task/"
  xmlns:query="class:/spiralcraft/data/query/"
  xmlns:test="class:/spiralcraft/test/"
  xmlns:example="class:/spiralcraft/data/test/example/"
  xmlns:secauth="class:/spiralcraft/security/auth/"
  xmlns:sectest="class:/spiralcraft/security/test/"
  xmlns:codec="class:/spiralcraft/codec/text/"
  >
  <targetTypeURI>class:/spiralcraft/security/test/Authenticator
  </targetTypeURI>
  
  
  <chain>
 
    <task:Sequence>
      <scenarios>
    
        <test:Stub>
          <name>running
          </name>
          <messageX>[secauth:Authenticator]
          </messageX>
          <conditionX>true
          </conditionX>
        </test:Stub>
        
        <task:Chain>
          <contextX>[secauth:Authenticator].createSession()
          </contextX>
        
        
          <chain>

            <test:Stub>
              <name>session
              </name>
              <messageX>[secauth:AuthSession]
              </messageX>
              <conditionX>true
              </conditionX>
            </test:Stub>

            <test:Assertion>
              <name>authenticated by default
              </name>
              <subjectX>[secauth:AuthSession].isAuthenticated()
              </subjectX>
              <testX>.==false
              </testX>
            </test:Assertion>

            <test:Assertion>
              <name>login with clearpass
              </name>
              <subjectX>
                [@secauth:LoginEntry]
                  .([secauth:AuthSession].@channel
                   ,username:="userOne"
                   ,passwordCleartext:="testOne"
                   )
              </subjectX>
              <testX>
                [secauth:AuthSession].authenticate()
                &amp;&amp; [secauth:AuthSession].principal.name=="UserOne"
              </testX>
            </test:Assertion>

            <test:Assertion>
              <name>logout
              </name>
              <subjectX>[secauth:AuthSession].logout()
              </subjectX>
              <testX>![secauth:AuthSession].authenticate()
              </testX>
            </test:Assertion>

            <test:Assertion>
              <name>login with digest
              </name>
              <subjectX>
                [@secauth:LoginEntry]
                  .([secauth:AuthSession].@channel
                   ,username:="userThree"
                   ,saltedDigest:=[@codec:Base64Codec].@decodeBytes
                     ("A59145584E9F5B38DD2E49E0E1227FA1C29D912138CE54A62E44C8E3B7325F04"
                     )
                   )
              </subjectX>
              <testX>
                [secauth:AuthSession].authenticate()
                &amp;&amp; [secauth:AuthSession].principal.name=="UserThree"
              </testX>
            </test:Assertion>

            <test:Assertion>
              <name>digest
              </name>
              <subjectX>
                [@codec:HexCodec]
                  .@encodeHex([secauth:AuthSession].digest("useronetestOne"))
              </subjectX>
              <testX>
                .=="bbb1f56bf069fc1ddee2d08231a9fcc092f63a597a63e32ad1ff047e69627b9d"
              </testX>
            </test:Assertion>

          </chain>  
            
            
            
          
        </task:Chain>
                
      </scenarios>
      
    </task:Sequence>
  </chain>
        
</task:Reference>
