<task:Scenario
  xmlns:task="class:/spiralcraft/task/"
  xmlns:query="class:/spiralcraft/data/query/"
  xmlns:dtask="class:/spiralcraft/data/task/"
  xmlns:test="class:/spiralcraft/test/"
  xmlns:example="class:/spiralcraft/data/test/example/"
  >
  <chain>
 
    <task:Sequence>
      <scenarios>
    
        <dtask:Fetch>
          
          <query>
            <query:Scan>
              <type x="[@example:Customer].type"/>
            </query:Scan>
          </query>
          
          <chain>
            <test:Stub>
              <name>Scan
              </name>
              <messageX>""+[example:Customer.list].@size()+" results"
              </messageX>
              <conditionX>[example:Customer.list].@size()==3
              </conditionX>
            </test:Stub>
          </chain>
        </dtask:Fetch>

        <dtask:Fetch>
          
          <query>
            <query:Scan>
              <type x="[@example:Customer].type"/>
            </query:Scan>
          </query>
          
          <chain>
            <dtask:Fetch>
              <query>
                <query:ReferenceQuery>
                  <reference>[example:Customer.list]
                  </reference>
                </query:ReferenceQuery>
              </query>
            </dtask:Fetch>
            
            <test:Stub>
              <name>ReferenceQuery
              </name>
              <messageX>""+[example:Customer.list].@size()+" results"
              </messageX>
              <conditionX>[example:Customer.list].@size()==3
              </conditionX>
            </test:Stub>
            
          </chain>
        </dtask:Fetch>

        <dtask:Fetch>
          
          <query>
            <query:SetFilter>
              <filterSetX>{"Nomatch One","Mary Second","Nomatch Two"}
              </filterSetX>
              
              <searchX>.displayName
              </searchX>
              
              <excludeMatch>false
              </excludeMatch>
              
              <source>
                <query:Scan>
                  <type x="[@example:Customer].type"/>
                </query:Scan>
              </source>
              
            </query:SetFilter>
          </query>
          
          <chain>
            <test:Stub>
              <name>SetFilter
              </name>
              <messageX>""+[example:Customer.list].@size()+" results"
              </messageX>
              <conditionX>[example:Customer.list].@size()==1
              </conditionX>
            </test:Stub>
          </chain>
        </dtask:Fetch>

        <dtask:Fetch>
          
          <query>
            <query:SetFilter>
              <filterSetX>{"Nomatch One","Mary Second","Nomatch Two"}
              </filterSetX>
              
              <searchX>.displayName
              </searchX>
              
              <excludeMatch>true
              </excludeMatch>
              
              <source>
                <query:Scan>
                  <type x="[@example:Customer].type"/>
                </query:Scan>
              </source>
              
            </query:SetFilter>
          </query>
          
          <chain>
            <test:Stub>
              <name>SetFilter (neg)
              </name>
              <messageX>""+[example:Customer.list].@size()+" results"
              </messageX>
              <conditionX>[example:Customer.list].@size()==2
              </conditionX>
            </test:Stub>
          </chain>
        </dtask:Fetch>
        
      </scenarios>
      
    </task:Sequence>
  </chain>
        
</task:Scenario>
