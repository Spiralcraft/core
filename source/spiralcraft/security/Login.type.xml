<?xml version="1.0" encoding="UTF-8"?>

<!-- Standard username/password database -->
<meta:Type
  xmlns:meta="class:/spiralcraft/data/types/meta"
  xmlns:security="class:/spiralcraft/security"
  xmlns:codec="class:/spiralcraft/codec/text/"
  xmlns:sec="class:/spiralcraft/security/"
  xmlns:secauth="class:/spiralcraft/security/auth/"
  xmlns:j="class:/java/lang/"
  xmlns:dtask="class:/spiralcraft/data/task/"
  >
  
  <fields>
  
    <!--  Login.principalId -->
    <meta:SequenceField>
      
      <name>principalId
      </name>
      
      <type>
        <String.type>

          <maxLength>64
          </maxLength>
        
        </String.type>
      </type>

    </meta:SequenceField>

    <!--  Login.username -->
    <meta:Field>
      
      <name>username
      </name>
      
      <type>
        <String.type>

          <maxLength>64
          </maxLength>
        
        </String.type>
      </type>

    </meta:Field>

    <!--  Login.searchname -->
    <meta:CalculatedField>

      <name>searchname
      </name>

      <transient>false
      </transient>
      
      <expression>username.toLowerCase()
      </expression>
        
      <type>
        <String.type>

          <maxLength>64
          </maxLength>
        
        </String.type>
      </type>

    </meta:CalculatedField>
    
    <!--  Login.clearpass -->
    <meta:Field>

      <name>clearpass
      </name>

      <type>
        <String.type>

          <maxLength>64
          </maxLength>
        
        </String.type>
      </type>

    </meta:Field>
       
    <!--  Login.digestpass -->
    <meta:Field>

      <name>digestpass
      </name>

      <description>hex encoded password digest
      </description>

      <type>
        <String.type>

          <maxLength>512
          </maxLength>
        
        </String.type>
      </type>

    </meta:Field>
    
    
  </fields>
  
  <keys>
    <meta:Key>
      <primary>true
      </primary>
      
      <fieldList>principalId
      </fieldList>
    
    </meta:Key>

    <meta:Key>
      <unique>true
      </unique>

      <fieldList>searchname
      </fieldList>
    </meta:Key>
    
      
  </keys>

  <methods>
    <meta:Method>
      <name>findById</name>
      
      <static>true
      </static>
      
      <parameterTypes>
        <String.type/>
      </parameterTypes>
      
      <returnType>
        <sec:Login.type/>
      </returnType>
      
      <contextX>{ id:[@j:String] }
      </contextX>
          
      <x>[*dtask:Fetch{[@sec:Login],[{`principalId:=id`}]}].()
      </x>
          
    </meta:Method>

    <meta:Method>
      <name>findByName</name>
      
      <static>true
      </static>
      
      <parameterTypes>
        <String.type/>
      </parameterTypes>
      
      <returnType>
        <sec:Login.type/>
      </returnType>
      
      <contextX>{ name:[@j:String] }
      </contextX>
          
      <x>[*dtask:Fetch{[@sec:Login],[{`username:=name`}]}].()
      </x>
          
    </meta:Method>
    
    <meta:Method>
      <name>findBySearchName</name>
      
      <static>true
      </static>
      
      <parameterTypes>
        <String.type/>
      </parameterTypes>
      
      <returnType>
        <sec:Login.type/>
      </returnType>
      
      <contextX>{ name:[@j:String] }
      </contextX>
          
      <x>[*dtask:Fetch{[@sec:Login],[{`searchname:=name.toLowerCase()`}]}].()
      </x>
          
    </meta:Method>    
    
    <meta:Method>
      <name>securePassword
      </name>
      
      <parameterTypes>
        <secauth:DigestFunction.type/>
      </parameterTypes>
      
      <returnType><Void.type/>
      </returnType>
      
      <contextX>
        { 
          digestFunction:[@secauth:DigestFunction]
        }
      </contextX>
      
      <x>
        @{[sec:Login].digestpass
            =[@codec:HexCodec].@encodeHex
              (digestFunction.digest([sec:Login]{.searchname+.clearpass})
              )
          ,[sec:Login].clearpass=null
        }
      </x>
    </meta:Method>
    
    <meta:Method>
      <name>register
      </name>
      
      <static>true
      </static>
      
      <parameterTypes>
        <secauth:DigestFunction.type/>
        <String.type/>
        <String.type/>
      </parameterTypes>

      <returnType><sec:Login.type/>
      </returnType>
      
      <contextX>
        [#register] { 
          digestFunction:[@secauth:DigestFunction]
          ,username:[@j:String]
          ,cleartextPassword:[@j:String]
        }
      </contextX>
      
      <x>[*dtask:Edit{[@sec:Login].type}].()
        { .username=[register].username
          ,.clearpass=[register].cleartextPassword
          ,.securePassword([register].digestFunction)
          ,.@tuple.save()
          ,.
        }
      </x>
    </meta:Method>
    
    <meta:Method>
      <name>login
      </name>
      
      <returnType><Boolean.type/>
      </returnType>
      
      <x>
        [@secauth:LoginEntry].([secauth:AuthSession])
        {
          .username=[sec:Login].username
          ,.saltedDigest=[@codec:HexCodec].@decodeHex([sec:Login].digestpass)
          ,.update()
          ,[secauth:AuthSession].authenticate()
        }
      </x>
    </meta:Method>
  </methods>
</meta:Type>
