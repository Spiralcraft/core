<scm:Change.list
  xmlns:scm="class:/spiralcraft/scm/meta/"
  >
  <scm:Change>
    <revision>0.3.4
    </revision>
    
    <authorId>miketoth
    </authorId>
    
    <notes>
      <scm:Note>Ongoing spiralcraft-sql module support and integration
      </scm:Note>
    </notes>

        
    <detail>
      <scm:Change>
        <date>2009-04-30
        </date>
        
        <notes>
          <scm:Note>Refactor Space to support multiple Stores, as originally
            intended. class SingleSpace has been removed in favor of a 
            concrete spiralcraft.data.Space.
          </scm:Note>
          <scm:Note>Query supports recursive search for Scan types to 
            better narrow the set of stores to Query. This function was moved
            from AbstractStore.
          </scm:Note>
          <scm:Note>Query resolution should use the Focus chain to obtain the 
            relevant Space in which to recursively solve the query. Implemented
            in AbstractStore.
          </scm:Note>
          <scm:Note>Store interface is now a Service, and provides new method
            isAuthoritative to identify master store when multiple stores 
            support a Type.
          </scm:Note>
          <scm:Note>XmlStore defines authoritative types from the 
            XmlQueryable tables.
          </scm:Note>
        </notes>
        
        <path>/source/spiralcraft/data/
        </path>
        
        <resources>
          <URI>spi/SingleSpace.java
          </URI>
          <URI>Space.java
          </URI>
          <URI>query/Query.java
          </URI>
          <URI>query/Concatenation.java
          </URI>
          <URI>query/ConcatenationBinding.java
          </URI>
          <URI>spi/AbstractStore.java
          </URI>
          <URI>xml/XmlStore.java
          </URI>
          <URI>access/Store.java
          </URI>
        </resources>
        
      </scm:Change>
      
      <scm:Change>
        <date>2009-04-30
        </date>
        
        <notes>
          <scm:Note>Summary- Fix builder regression for persistence mechanism,
            which got tripped up on some other issues.
          </scm:Note>
          <scm:Note>MappedBeaninfo provides a CovariantPropertyType service,
            because java.beans.PropertyDescriptor is not powerful enough
            for Covariants and Generics.
          </scm:Note>
          <scm:Note>We now avoid instantiating and configuring assemblies
            created by default PropertySpecifiers.
          </scm:Note>
          <scm:Note>More intelligent property type resolution in 
            PropertySpecifier via MappedBeanInfo
          </scm:Note>
          <scm:Note>java.lang types are now explicitly dealt with in 
            AssemblyClass, so they do not get in the way of other unqualified 
            declarations for "local" assys.
          </scm:Note>
          <scm:Note>For consistency, PropertySpecifiers will always contain
            a "default" Assembly as contents. The distinction between 
            getProperty() and discoverProperty() is no longer.
          </scm:Note>
          <scm:Note>Clarified TypeMismatchException output
          </scm:Note>
          <scm:Note>ClassUtil has tool to determine root type of
            ParameterizedType
          </scm:Note>
          <scm:Note>ObjectType is no longer primitive, and can be assigned
            from anything but Void.
          </scm:Note>
          <scm:Note>data.reflect.ReflectionType now uses type inference 
            mechanism from lang.reflect package to handle java.beans
            issues in an identical fashion.
          </scm:Note>
          <scm:Note>Fields now get log from base class
          </scm:Note>
        </notes>
        
        <path>/source/spiralcraft/
        </path>
        
        <resources>
          <URI>beans/MappedBeanInfo.java
          </URI>
          <URI>builder/Assembly.java
          </URI>
          <URI>builder/AssemblyClass.java
          </URI>
          <URI>builder/PropertyBinding.java
          </URI>
          <URI>builder/PropertySpecifier.java
          </URI>
          <URI>data/TypeMismatchException.java
          </URI>
          <URI>data/types/standard/ObjectType.java
          </URI>
          <URI>data/reflect/ReflectionScheme.java
          </URI>
          <URI>data/reflect/ReflectionField.java
          </URI>
          <URI>util/lang/ClassUtil.java
          </URI>
          <URI>lang/reflect/BeanPropertyTranslator.java
          </URI>
          <URI>lang/reflect/BeanReflector.java
          </URI>
          <URI>data/builder/BuilderField.java
          </URI>
          <URI>data/builder/BuilderScheme.java
          </URI>
          <URI>data/builder/BuilderType.java
          </URI>
          <URI>data/core/CalculatedFieldImpl.java
          </URI>
          <URI>data/core/CalculatedFieldImpl.java
          </URI>
          <URI>data/core/FieldImpl.java
          </URI>
          <URI>data/core/KeyField.java
          </URI>
          <URI>data/core/QueryField.java
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
        <date>2009-04-29
        </date>
        
        <notes>
          <scm:Note>Provide encapsulation of standard Transaction management
            logic in a WorkUnit callback object
          </scm:Note>
        </notes>
        
        <path>/source/spiralcraft/data/transaction/
        </path>
        
        <resources>
          <URI>Transaction.java</URI>
          <URI>WorkUnit.java</URI>
          <URI>WorkException.java</URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
        <date>2009-04-26
        </date>
        
        <notes>
          <scm:Note>Refactor Cursor interface to account for need to use
            close(), and removal of legacy requirement to avoid name 
            clash using the dataXXX method names.
          </scm:Note>
        </notes>
        
        <path>/source/spiralcraft/
        </path>
        
        <resources>
          <URI>data/access/Cursor.java</URI>
          <URI>data/access/SerialCursor.java</URI>
          <URI>data/access/ScrollableCursor.java</URI>
          <URI>data/access/CursorAggregate.java</URI>
          <URI>data/access/DataSynchronizer.java</URI>
          <URI>data/core/KeyField.java</URI>
          <URI>data/core/QueryField.java</URI>
          <URI>data/core/UniqueRule.java</URI>
          <URI>data/flatfile/RecordCursor.java</URI>
          <URI>data/flatfile/ScrollableRecordCursor.java</URI>
          <URI>data/lang/CursorBinding.java</URI>
          <URI>data/lang/TupleFocus.java</URI>
          <URI>data/query/QueryAggregate.java</URI>
          <URI>data/query/BoundQuery.java</URI>
          <URI>data/query/UnaryBoundQuery.java</URI>
          <URI>data/query/Sort.java</URI>
          <URI>data/query/Shuffle.java</URI>
          <URI>data/query/Equijoin.java</URI>
          <URI>data/query/Selection.java</URI>
          <URI>data/query/Distinct.java</URI>
          <URI>data/query/UnionBinding.java</URI>
          <URI>data/query/QueryChannel.java</URI>
          <URI>data/query/QueryScenario.java</URI>
          <URI>data/spi/AbstractAggregateQueryable.java</URI>
          <URI>data/spi/CursorIterator.java</URI>
          <URI>data/spi/ListCursor.java</URI>
          <URI>data/spi/ManualCursor.java</URI>
          <URI>security/spi/DataAuthenticator.java</URI>
          <URI>data/xml/XmlStore.java</URI>
        </resources>
        
      </scm:Change>
      
      <scm:Change>
        <date>2009-04-26
        </date>
        
        <path>/source/spiralcraft/test/
        </path>
        
        <notes>
          <scm:Note>A package for implementing automated test cases built on 
            the Task/Scenario system, to produce TestResults in a wide variety
            of scenarios. 
          </scm:Note>
        </notes>
      </scm:Change>
      
      <scm:Change>
        <date>2009-04-26
        </date>
        
        <path>/source/spiralcraft/command/BoundCommandFactory.java
        </path>
        
        <notes>
          <scm:Note>Encapsulates the situation where a Command is specified
            by an Expression or other device resolved against the Focus chain.
          </scm:Note>
          <scm:Note>This anticipates
            that Expression driven command resolution will need to support
            just-in time customization of the generated Command objects via
            property injection, for more control in the declarative layer.
          </scm:Note>
        </notes>
        
      </scm:Change>
          
      <scm:Change>
        <date>2009-04-26
        </date>
        
        <path>/source/spiralcraft/builder/PropertyBinding.java
        </path>
        
        <notes>
          <scm:Note>Builder resolves namespaces in Expressions when
            the target is of type Expression, before
            applying the Expression object to the target.
          </scm:Note>
        </notes>
        
      </scm:Change>

      <scm:Change>
        <date>2009-04-26
        </date>
        
        <path>/source/
        </path>
        
        <resources>
          <URI>spiralcraft/vfs/Initializer.java
          </URI>
          <URI>spiralcraft/vfs/Resolver.java
          </URI>
          <URI>META-INF/services/spiralcraft.common.Initializer
          </URI>
        </resources>
        
        <notes>
          <scm:Note>Register a StringConverter for Resource objects
          </scm:Note>
        </notes>
      </scm:Change>
      
      <scm:Change>
        <date>2009-04-26
        </date>
        
        <path>/source/spiralcraft/data/
        </path>
        
        <resources>
          <URI>spi/SingleSpace.java
          </URI>
          <URI>spi/AbstractStore.java
          </URI>
          <URI>xml/XmlStore.java
          </URI>
        </resources>
        
        <notes>
          <scm:Note>Debugging and logging functionality
          </scm:Note>
          <scm:Note>Startup assertion- ensure that Store is started when
             trying to query.
          </scm:Note>
          <scm:Note>XmlStore now calls super Lifecycle interface
          </scm:Note>
          <scm:Note>Space now implements Service, which extends Registrant. 
            Removed redundant implements Registrant declaration from
            SingleSpace.
          </scm:Note>
        </notes>
      </scm:Change>
      
      <scm:Change>
        <date>2009-04-24
        </date>
        
        <path>/source/spiralcraft
        </path>
        
        <resources>
          <URI>task/*
          </URI>
          <URI>data/query/QueryScenario
          </URI>
          <URI>data/util/DataBatchProcessor
          </URI>
        </resources>
        
        
        <notes>
          <scm:Note>Scenario is now a CommandFactory, and always creates 
            TaskCommands to allow for interaction between tasks.
          </scm:Note>
          <scm:Note>Created a QueryScenario to run data queries from a Task
          </scm:Note>
          <scm:Note>Added stateless result processing chain to Task
             infrastructure
          </scm:Note>
          <scm:Note>TaskRunner publishes the Service tree into into the
            Focus.
          </scm:Note>
          <scm:Note>Clarified Scenario hierarchical compositional model.
          </scm:Note>
          <scm:Note>Refactored the BatchScenario into multiple components-
            Batch, Model and Commander.
          </scm:Note>
        </notes>
      </scm:Change>
    </detail>
    
  </scm:Change>
  
  <scm:Change>
    <revision>0.3.3
    </revision>
    
    <date>2009-04-21
    </date>
    
    <authorId>miketoth
    </authorId>
    
    <notes>
      <scm:Note>Ongoing spiralcraft-sql module support and integration
      </scm:Note>
    </notes>
    

    <detail>
      <scm:Change>
        <date>2009-04-21
        </date>
        
        <path>/source/spiralcraft/io/
        </path>
        
        <resources>
          <URI>FileSequence.java</URI>
          <URI>RotatingFileOutputAgent.java</URI>
        </resources>
        
        <notes>
          <scm:Note>Handle situation where log fails to rotate because file
            is opened by something else. Put off rotate for 2 seconds
            default.
          </scm:Note>
        </notes>
      </scm:Change>

      <scm:Change>
        <date>2009-04-20
        </date>
        
        <path>/source/spiralcraft/data/sax/
        </path>
        
        <resources>
          <URI>DataHandler.java</URI>
          <URI>DataHandlerBase.java</URI>
          <URI>DataReader.java</URI>
          <URI>DataSAXException.java</URI>
        </resources>
        
        <notes>
          <scm:Note>Ensure that document location is provided for parser
            generated SAX exceptions
          </scm:Note>
        </notes>
      </scm:Change>

      <scm:Change>
        <date>2009-04-20
        </date>
        
        <path>/source/spiralcraft/builder/AssemblyLoader.java
        </path>
        
        <notes>
          <scm:Note>Write dataURI builder attribute to PropertySpecifier
          </scm:Note>
        </notes>
      </scm:Change>
    
      <scm:Change>
        <date>2009-04-20
        </date>
        
        <path>/source/spiralcraft/task/TaskRunner.java
        </path>
        
        <notes>
          <scm:Note>Throw better exception when no scenario configured
          </scm:Note>

          <scm:Note>Integrate a Service (or ServiceGroup) to be run
            along with the Scenario.
          </scm:Note>
        </notes>
      </scm:Change>

      <scm:Change>
        <date>2009-04-20
        </date>
        
        <resources>
          <URI>/source/spiralcraft/data/persist/AbstractXmlObject.java
          </URI>
        </resources>
            
        
        <notes>
          <scm:Note>Renamed method create() to activate(). New method
             create() only instantiates object.
          </scm:Note>
        </notes>
        
        <detail>
        
          <resources>
            <URI>/source/spiralcraft/builder/PropertyBinding.java
            </URI>
            <URI>/source/spiralcraft/exec/Executor.java
            </URI>
            <URI>/source/spiralcraft/task/BatchScenario.java
            </URI>
          </resources>
          
          <notes>
            <scm:Note>Refactoring sorted out
            </scm:Note>
          </notes>
        </detail>
      </scm:Change>

      <scm:Change>
        <date>2009-04-20
        </date>
        
        <path>/source/spiralcraft/data/reflect/
        </path>
        
        <resources>
          <URI>ReflectionType.java
          </URI>
          <URI>ReflectioTypeFactory.java
          </URI>
        </resources>
        
        <notes>
          <scm:Note>Remove spiralcraft.data related ClassNotFoundException that
           prints to stderr. Move to using ClassLog instead of stderr
          </scm:Note>
        </notes>
        
      </scm:Change>
      
      <scm:Change>
        <date>2009-04-20
        </date>
        
        <resources>
          <URI>/source/spiralcraft/service/Service.java
          </URI>
          <URI>/source/spiralcraft/service/ThreadService.java
          </URI>
          <URI>/source/spiralcraft/service/ServiceGroup.java
          </URI>
        </resources>
        
        <notes>
          <scm:Note>spiralcraft.service.Service interface now extends
             Registrant, as many components that fit in the Service role
             are also Registrants, and would benefit from top-down
             reachability.
          </scm:Note>
        </notes>
        <detail>

          
          <scm:Change>
            <path>/source/spiralcraft/data/Space
            </path>
            
            <notes>
              <scm:Note>Implements Service
              </scm:Note>
            </notes>
          </scm:Change>
          
          <scm:Change>
            <notes>
              <scm:Note>ServiceAdapter obsoleted
              </scm:Note>
              
            </notes>
            <resources>
              <URI>/source/spiralcraft/service/ServiceAdapter.java
              </URI>
              <URI>/source/spiralcraft/service/ThreadService.java
              </URI>
              <URI>/source/spiralcraft/ui/UiService.java
              </URI>
              
            </resources>
          </scm:Change>

          <scm:Change>
            <path>/source/spiralcraft/service/Daemon.java
            </path>

            <notes>
            
              <scm:Note>Removed old JUL logging code
                 in register(), remove method and defer to super.register()
              </scm:Note>  
            </notes>
          </scm:Change>
                    
        </detail>
        
      </scm:Change>    
    </detail>
  </scm:Change>
  
  <scm:Change>
    <revision>0.3.2
    </revision>
    
    <authorId>miketoth
    </authorId>
    
    <notes>
      <scm:Note>Bug fixes
      </scm:Note>
      <scm:Note>Change management system testing
      </scm:Note>
      <scm:Note>Ongoing spiralcraft-sql module support and integration
      </scm:Note>
    </notes>
    
    <detail>
      <scm:Change>
        <date>2009-04-20
        </date>
        
        <path>/source/spiralcraft/builder
        </path>
        
        <notes>
          <scm:Note>Fix problem using drill-down property specifier - 
            "More than one Assembly in property" introduced
            with latest builder upgrade set. PropertySpecifier now correctly
            uses "replace" mode when computing override for non-aggregate
            properties.
            
          </scm:Note>
        </notes>
      </scm:Change>

      <scm:Change>
        <date>2009-04-19
        </date>
        
        <path>/source/spiralcraft/lang/reflect/BeanPropertyChannel
        </path>
        
        <notes>
          <scm:Note>Fix null exception thrown in WebUI on REQUEST event in
                 Editor. When trying to set a property of a null value, return
                 false from set() instead of throwing an exception. Encountering
                 a null should be a soft failure.
          </scm:Note>
        </notes>
      </scm:Change>
          
      <scm:Change>
        <date>2009-04-19
        </date>
        
        <path>/source/spiralcraft/task/Scenario
        </path>
        
        <notes>
          <scm:Note>Removed bindCommand and associated ThreadLocalChannel for
            command, as it appears that this functionality is no longer used
            and no longer has a purpose.
          </scm:Note>
        </notes>
      </scm:Change>
    
      <scm:Change>
        <date>2009-04-19
        </date>
        
        <path>/source/spiralcraft/task/TaskRunner
        </path>
        
        <notes>
          <scm:Note>Provide bean configuration for the root Focus into
            which the referenced Scenario will be bound. This is anticipated
            as being generally useful, but the specific case that prompted
            it is no longer applicable.
          </scm:Note>
        </notes>
      </scm:Change>
    
      <scm:Change>
        <date>2009-04-19
        </date>
        
        <path>/source/spiralcraft/builder
        </path>
        
        <notes>
          <scm:Note>Functionally transparent refactoring to modularize 
            configuration source scenarios and split up large methods.
          </scm:Note>
        </notes>
      </scm:Change>
    
      <scm:Change>
        <date>2009-04-17
        </date>
        
        <path>/source/spiralcraft/lang/util/Configurator.java
        </path>
        
        <notes>
          <scm:Note>Improved debug message when bean property is not found
          </scm:Note>
                  
        </notes>
      </scm:Change>
          
      <scm:Change>
        <date>2009-04-17
        </date>
        
        <path>/source/spiralcraft/log/
        </path>
        
        <resources>
          <URI>DefaultFormatter.java
          </URI>
        </resources>
        
        <notes>
          <scm:Note>Improved readability of default formatter by putting 
            message up front and
            source data at end of single line, eliminating the previous
            multi-line format.
          </scm:Note>
        
        </notes>
        
      </scm:Change>

      <scm:Change>
        <date>2009-04-16
        </date>
        
        <path>/source/spiralcraft/data/flatfile/
        </path>
        
        <resources>
          <URI>DelimitedRecordFormat.java
          </URI>
          <URI>Writer.java
          </URI>
        </resources>
        
        <notes>
          <scm:Note>Integrated DelimitedRecordFormat into Writer
          </scm:Note>
          
          <scm:Note>Auto-configure DelimitedRecordFormat from supplied Type
            or FieldSet when no  FieldMapping[] is provided.
          </scm:Note>
        
        </notes>
      </scm:Change>
    </detail>
  </scm:Change>
</scm:Change.list>